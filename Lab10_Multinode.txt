1. Primero ir al directorio correspondiente al ej https://github.com/diegochavezcarro/kube-labs/tree/main/python-redis
minikube delete

2. Crear un nuevo minikube (borrar el anterior o crear otro perfil) con 3 nodos:
minikube start --nodes 3


3. Ver el estado del cluster y levantar el dashboard:
kubectl get nodes

NAME           STATUS   ROLES           AGE   VERSION
minikube       Ready    control-plane   55s   v1.32.0
minikube-m02   Ready    <none>          30s   v1.32.0
minikube-m03   Ready    <none>          7s    v1.32.0

minikube status

minikube
type: Control Plane
host: Running
kubelet: Running
apiserver: Running
kubeconfig: Configured

minikube-m02
type: Worker
host: Running
kubelet: Running

minikube-m03
type: Worker
host: Running
kubelet: Running

minikube dashboard (en otro Tab)


4. Desplegar la app:

kubectl apply -f deploy-redis.yml
kubectl apply -f svc-redis.yml
kubectl apply -f deploy-python.yml
minikube tunnel (En otro tab)
kubectl apply -f svc-python.yml

thon-redis$ kubectl apply -f deploy-redis.yml
deployment.apps/redis created
(venv) vanesa.manzanelli@infraPC-0484:~/CursoDevOpsTecnology/kube-labs/python-redis$ kubectl apply -f svc-redis.yml
service/redis created
(venv) vanesa.manzanelli@infraPC-0484:~/CursoDevOpsTecnology/kube-labs/python-redis$ kubectl apply -f deploy-python.yml
deployment.apps/python-deploy created
(venv) vanesa.manzanelli@infraPC-0484:~/CursoDevOpsTecnology/kube-labs/python-redis$ kubectl apply -f svc-python.yml
service/python-svc created
(venv) vanesa.manzanelli@infraPC-0484:~/CursoDevOpsTecnology/kube-labs/python-redis$ 

5. Observar como se distribuyeron los pods:
kubectl get pods -o wide

NAME                             READY   STATUS    RESTARTS   AGE   IP           NODE           NOMINATED NODE   READINESS GATES
python-deploy-6fc8fb6f77-5p4s9   1/1     Running   0          48s   10.244.1.3   minikube-m02   <none>           <none>
python-deploy-6fc8fb6f77-7s8bk   1/1     Running   0          48s   10.244.0.3   minikube       <none>           <none>
python-deploy-6fc8fb6f77-c8wx9   1/1     Running   0          48s   10.244.2.4   minikube-m03   <none>           <none>
redis-6f4bdb7b7c-4xb62           1/1     Running   0          78s   10.244.2.3   minikube-m03   <none>           <none>


6. Borrar un pod y ver que sucede:
kubectl delete pods python-deploy-55544dd6c7-6vzw8


kubectl get pods -o wide

(venv) vanesa.manzanelli@infraPC-0484:~/CursoDevOpsTecnology/kube-labs/python-redis$ kubectl delete pods python-deploy-6fc8fb6f77-5p4s9
pod "python-deploy-6fc8fb6f77-5p4s9" deleted
(venv) vanesa.manzanelli@infraPC-0484:~/CursoDevOpsTecnology/kube-labs/python-redis$ kubectl get pods -o wide
NAME                             READY   STATUS    RESTARTS   AGE     IP           NODE           NOMINATED NODE   READINESS GATES
python-deploy-6fc8fb6f77-7s8bk   1/1     Running   0          118s    10.244.0.3   minikube       <none>           <none>
python-deploy-6fc8fb6f77-99hnq   1/1     Running   0          8s      10.244.1.4   minikube-m02   <none>           <none>
python-deploy-6fc8fb6f77-c8wx9   1/1     Running   0          118s    10.244.2.4   minikube-m03   <none>           <none>
redis-6f4bdb7b7c-4xb62           1/1     Running   0          2m28s   10.244.2.3   minikube-m03   <none>           <none>
(venv) vanesa.manzanelli@infraPC-0484:~/CursoDevOpsTecnology/kube-labs/python-redis$ 

7. Para ver mas replicas distribuidas modificar el archivo
https://github.com/diegochavezcarro/kube-labs/blob/main/python-redis/deploy-python.yml
para que tenga 6 replicas, luego desplegarlo y ver que sucede:
kubectl apply -f deploy-python.yml
kubectl get pods -o wide

NAME                             READY   STATUS    RESTARTS   AGE     IP           NODE           NOMINATED NODE   READINESS GATES
python-deploy-6fc8fb6f77-7s8bk   1/1     Running   0          4m36s   10.244.0.3   minikube       <none>           <none>
python-deploy-6fc8fb6f77-99hnq   1/1     Running   0          2m46s   10.244.1.4   minikube-m02   <none>           <none>
python-deploy-6fc8fb6f77-bfb7f   1/1     Running   0          33s     10.244.1.5   minikube-m02   <none>           <none>
python-deploy-6fc8fb6f77-c8wx9   1/1     Running   0          4m36s   10.244.2.4   minikube-m03   <none>           <none>
python-deploy-6fc8fb6f77-kf7qt   1/1     Running   0          33s     10.244.2.5   minikube-m03   <none>           <none>
python-deploy-6fc8fb6f77-zsl5n   1/1     Running   0          33s     10.244.0.4   minikube       <none>           <none>
redis-6f4bdb7b7c-4xb62           1/1     Running   0          5m6s    10.244.2.3   minikube-m03   <none>           <none>


8. Borrar uno de los nodos y ver que sucede:
minikube node delete m02

thon-redis$ minikube node delete minikube-m02
ðŸ”¥  Eliminando nodo minikube-m02 del clÃºster minikube
âœ‹  Stopping node "minikube-m02"  ...
ðŸ›‘  Apagando "minikube-m02" mediante SSH...
ðŸ”¥  Eliminando "minikube-m02" en docker...
ðŸ’€  Node minikube-m02 was successfully deleted.

kubectl get pods -o wide
NAME                             READY   STATUS    RESTARTS   AGE     IP           NODE           NOMINATED NODE   READINESS GATES
python-deploy-6fc8fb6f77-7jttk   1/1     Running   0          33s     10.244.2.6   minikube-m03   <none>           <none>
python-deploy-6fc8fb6f77-7s8bk   1/1     Running   0          5m55s   10.244.0.3   minikube       <none>           <none>
python-deploy-6fc8fb6f77-c8wx9   1/1     Running   0          5m55s   10.244.2.4   minikube-m03   <none>           <none>
python-deploy-6fc8fb6f77-dbblz   1/1     Running   0          33s     10.244.0.5   minikube       <none>           <none>
python-deploy-6fc8fb6f77-kf7qt   1/1     Running   0          112s    10.244.2.5   minikube-m03   <none>           <none>
python-deploy-6fc8fb6f77-zsl5n   1/1     Running   0          112s    10.244.0.4   minikube       <none>           <none>
redis-6f4bdb7b7c-4xb62           1/1     Running   0          6m25s   10.244.2.3   minikube-m03   <none>           <none>
